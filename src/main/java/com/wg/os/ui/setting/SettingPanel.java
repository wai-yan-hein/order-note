/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.wg.os.ui.setting;

import com.wg.os.common.Global;
import com.wg.os.util.Util1;
import java.awt.FlowLayout;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

/**
 *
 * @author Lenovo
 */
@Component
public class SettingPanel extends javax.swing.JPanel {

    private static final org.slf4j.Logger LOGGER = LoggerFactory.getLogger(SettingPanel.class);

    @Autowired
    private FontPanel fontPanel;
    @Autowired
    private PathPanel pathPanel;
    @Autowired
    private LookAndFeel lookAndFeel;

    /**
     * Creates new form SettingPanel
     */
    public SettingPanel() {
        initComponents();
        panelSetting.setLayout(new FlowLayout(FlowLayout.LEFT));
        initTree();
    }

    private void setCurrentFont() {
        tree.setFont(Global.font);
    }

    private void initTree() {
        setCurrentFont();
        DefaultTreeCellRenderer renderer = (DefaultTreeCellRenderer) tree.getCellRenderer();
        //Icon closedIcon = new ImageIcon("closed.png");
        //Icon openIcon = new ImageIcon("open.png");
        Icon leafIcon = new ImageIcon(getClass().getResource("/image/tree_leaf.png"));
        //renderer.setClosedIcon(closedIcon);
        //renderer.setOpenIcon(openIcon);
        renderer.setLeafIcon(leafIcon);
        tree.setCellRenderer(renderer);
        tree.setShowsRootHandles(true);
        tree.addTreeSelectionListener((TreeSelectionEvent e) -> {
            DefaultMutableTreeNode node = (DefaultMutableTreeNode) tree.getSelectionPath().getLastPathComponent();
            String nodeName = node.getUserObject().toString();
            JPanel panel = getPanel(nodeName);
            panelSetting.removeAll();
            panelSetting.add(panel);
            panelSetting.repaint();
            panelSetting.revalidate();
        });
    }

    private JPanel getPanel(String name) {
        switch (name) {
            case "Font":
                fontPanel.setSelectedFont();
                return fontPanel;
            case "Path":
                pathPanel.assignDefalutValue();
                return pathPanel;
            case "Look And Feel":
                lookAndFeel.initCombo();
                return lookAndFeel;
            default:
                return new JPanel();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tree = new javax.swing.JTree();
        panelSetting = new javax.swing.JPanel();

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Setting");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Font");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Path");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Look And Feel");
        treeNode1.add(treeNode2);
        tree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        tree.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                treeComponentShown(evt);
            }
        });
        jScrollPane1.setViewportView(tree);

        panelSetting.setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelSetting, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
            .addComponent(panelSetting, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void treeComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_treeComponentShown
        // TODO add your handling code here:
        Util1.setLookAndFeel(this);
    }//GEN-LAST:event_treeComponentShown


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelSetting;
    private javax.swing.JTree tree;
    // End of variables declaration//GEN-END:variables

}
